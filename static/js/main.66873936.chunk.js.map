{"version":3,"sources":["Components/Song.jsx","utils/util.js","Components/Player.jsx","data.js","Components/LibrarySong.jsx","Components/Library.jsx","Components/Nav.jsx","App.js","reportWebVitals.js","index.js"],"names":["Song","currentSong","className","src","cover","alt","name","artist","activeLibrary","songs","setSongs","map","song","id","active","Player","setCurrentSong","isPlaying","setIsPlaying","audioRef","songInfo","setSongInfo","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","useEffect","current","play","currentTime","style","background","color","type","min","max","duration","value","onChange","e","target","transform","animationPercentage","icon","faAngleLeft","size","onClick","faPause","faPlay","pause","faAngleRight","data","audio","uuidv4","LibrarySong","songSelectHandler","width","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useState","useRef","timeUpdateHandler","currentTimeRounded","round","durationRounded","songEndHandler","ref","onTimeUpdate","onLoadedMetadata","onEnded","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66873936.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n  return (\r\n    <div className=\"song-container\">\r\n      <img src={currentSong.cover} alt={currentSong.name} />\r\n      <h2>{currentSong.name}</h2>\r\n      <h3>{currentSong.artist}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Song;\r\n","export const activeLibrary = (songs, currentSong, setSongs) => {\r\n  const newSongs = songs.map((song) => {\r\n    if (song.id === currentSong.id) {\r\n      return {\r\n        ...song,\r\n        active: true,\r\n      };\r\n    } else {\r\n      return {\r\n        ...song,\r\n        active: false,\r\n      };\r\n    }\r\n  });\r\n  setSongs(newSongs);\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlay,\r\n  faAngleLeft,\r\n  faAngleRight,\r\n  faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { activeLibrary } from \"../utils/util\";\r\n\r\nconst Player = ({\r\n  currentSong,\r\n  setCurrentSong,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  audioRef,\r\n  songInfo,\r\n  setSongInfo,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  const getTime = (time) => {\r\n    return (\r\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\r\n    );\r\n  };\r\n  const playSongHandler = () => {\r\n    if (isPlaying) {\r\n      audioRef.current.pause();\r\n      setIsPlaying(!isPlaying);\r\n    } else {\r\n      audioRef.current.play();\r\n      setIsPlaying(!isPlaying);\r\n    }\r\n  };\r\n\r\n  const dragHandler = (e) => {\r\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n    audioRef.current.currentTime = e.target.value;\r\n  };\r\n  const skipTrackHandler = async (direction) => {\r\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\r\n    if (direction === \"skip-forward\") {\r\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n    }\r\n    if (direction === \"skip-backward\") {\r\n      (currentIndex - 1) % songs.length === -1\r\n        ? await setCurrentSong(songs[songs.length - 1])\r\n        : await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    activeLibrary(songs, currentSong, setSongs);\r\n    if (isPlaying) audioRef.current.play();\r\n  }, [currentSong]);\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"time-control\">\r\n        <p>{getTime(songInfo.currentTime)}</p>\r\n        <div\r\n          style={{\r\n            background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n          }}\r\n          className=\"track\"\r\n        >\r\n          <input\r\n            type=\"range\"\r\n            min={0}\r\n            max={songInfo.duration || 0}\r\n            value={songInfo.currentTime}\r\n            onChange={dragHandler}\r\n          />\r\n          <div\r\n            className=\"animate-track\"\r\n            style={{\r\n              transform: `translateX(${songInfo.animationPercentage}%)`,\r\n            }}\r\n          ></div>\r\n        </div>\r\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n      </div>\r\n      <div className=\"play-control\">\r\n        <FontAwesomeIcon\r\n          icon={faAngleLeft}\r\n          size=\"2x\"\r\n          onClick={() => skipTrackHandler(\"skip-backward\")}\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={isPlaying ? faPause : faPlay}\r\n          size=\"2x\"\r\n          onClick={playSongHandler}\r\n        />\r\n        <FontAwesomeIcon\r\n          icon={faAngleRight}\r\n          size=\"2x\"\r\n          onClick={() => skipTrackHandler(\"skip-forward\")}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Player;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\nfunction data() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n\r\n    //ADD MORE HERE\r\n  ];\r\n}\r\n\r\nexport default data;\r\n","import React from \"react\";\r\nimport { activeLibrary } from \"../utils/util\";\r\n\r\nconst LibrarySong = ({\r\n  currentSong,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  songs,\r\n  setSongs,\r\n}) => {\r\n  const songSelectHandler = async () => {\r\n    await setCurrentSong(currentSong);\r\n    activeLibrary(songs, currentSong, setSongs);\r\n    if (isPlaying) audioRef.current.play();\r\n  };\r\n  return (\r\n    <div\r\n      className={`library-song ${currentSong.active ? \"selected\" : \"\"}`}\r\n      onClick={songSelectHandler}\r\n    >\r\n      <img src={currentSong.cover} alt={currentSong.name} width=\"200px\" />\r\n      <div className=\"song-description\">\r\n        <h3>{currentSong.name}</h3>\r\n        <h4>{currentSong.artist}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n  songs,\r\n  setSongs,\r\n  setCurrentSong,\r\n  audioRef,\r\n  isPlaying,\r\n  libraryStatus,\r\n}) => {\r\n  return (\r\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n      <h2>Songs Library</h2>\r\n      <div className=\"library-songs\">\r\n        {songs.map((song) => (\r\n          <LibrarySong\r\n            currentSong={song}\r\n            setCurrentSong={setCurrentSong}\r\n            audioRef={audioRef}\r\n            isPlaying={isPlaying}\r\n            songs={songs}\r\n            setSongs={setSongs}\r\n            key={song.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n  return (\r\n    <div className=\"nav\">\r\n      <h2>Waves</h2>\r\n      <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n        Library\r\n        <FontAwesomeIcon icon={faMusic} />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import \"./styles/App.scss\";\nimport Song from \"./Components/Song\";\nimport Player from \"./Components/Player\";\nimport data from \"./data\";\nimport React, { useState, useRef } from \"react\";\nimport Library from \"./Components/Library\";\nimport Nav from \"./Components/Nav\";\nfunction App() {\n  const [songs, setSongs] = useState(data);\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const audioRef = useRef(null);\n  const timeUpdateHandler = (e) => {\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n    const currentTimeRounded = Math.round(currentTime);\n    const durationRounded = Math.round(duration);\n    let animationPercentage = Math.round(\n      (currentTimeRounded / durationRounded) * 100\n    );\n    // console.log(animation);\n    setSongInfo({ currentTime, duration, animationPercentage });\n  };\n  const songEndHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n  };\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        audioRef={audioRef}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n      <audio\n        src={currentSong.audio}\n        ref={audioRef}\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        onEnded={songEndHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}